# 统计平均每天有多少条记录
SELECT
count(*) / date_part('day', current_timestamp-min(a.create_date))
from public.trade_user_browse_record a

# 统计昨天的数据：
select count(1) from tb2 where (to_date(last_update_date::text,'YYYY-MM-DD')=current_date-1);
current_date: 获取当前的日期，-1即为昨天；
to_date：日期转换函数；

# 时间函数
########################################
---------------函数---------------
age(timestamp,timestamp)
---------------返回类型---------------
interval
---------------描述---------------
计算两个时间戳的时间间隔
---------------示例---------------
select age(timestamp '2001-04-10', timestamp '1957-06-13');
---------------结果---------------
43 years 9 mons 27 days
########################################
---------------函数---------------
age(timestamp)
---------------返回类型---------------
interval
---------------描述---------------
计算current_date与入参时间戳的时间间隔
---------------示例---------------
select age(timestamp '2016-07-07 12:00:00');
---------------结果---------------
12:00:00
########################################
---------------函数---------------
clock_timestamp()
---------------返回类型---------------
timestamp with time zone
---------------描述---------------
当前时间戳（语句执行时变化）
---------------示例---------------
select clock_timestamp();
---------------结果---------------
2016-07-08 15:14:04.198000
########################################
---------------函数---------------
current_date
---------------返回类型---------------
date
---------------描述---------------
当前日期
---------------示例---------------
select current_date;
---------------结果---------------
2016-07-08 00:00:00
########################################
---------------函数---------------
current_time
---------------返回类型---------------
time with time zone
---------------描述---------------
当前时间
---------------示例---------------
select current_time;
---------------结果---------------
15:15:56.394651-07
########################################
---------------函数---------------
current_timestamp
---------------返回类型---------------
timestamp with time zone
---------------描述---------------
当前时间戳
---------------示例---------------
select current_timestamp;
---------------结果---------------
2016-07-08 15:16:50.486000
########################################
---------------函数---------------
date_part(text,timestamp)
---------------返回类型---------------
double precision
---------------描述---------------
获取时间戳中的某个子域，其中text可以为year,month,day,hour,minute,second等
---------------示例---------------
select
date_part('year',timestamp'2016-07-08 12:05:06'),
date_part('month',timestamp'2016-07-08 12:05:06'),
date_part('day',timestamp'2016-07-08 12:05:06'),
date_part('hour',timestamp'2016-07-08 12:05:06'),
date_part('minute',timestamp'2016-07-08 12:05:06'),
date_part('second',timestamp'2016-07-08 12:05:06');
---------------结果---------------
2016 | 7 | 8 | 12 | 5 | 6
########################################
---------------函数---------------
date_part(text,interval)
---------------返回类型---------------
double precision
---------------描述---------------
功能同上，只是第二个入参为时间间隔
---------------示例---------------
select date_part('hour',interval'1 day 13:00:12');
---------------结果---------------
13
########################################
---------------函数---------------
date_trunc(text,timestamp)
---------------返回类型---------------
timestamp
---------------描述---------------
将时间戳截断成指定的精度，指定精度后面的子域用0补充
---------------示例---------------
select date_trunc('hour', timestamp'2016-07-08 22:30:33');
---------------结果---------------
2016-07-08 22:00:00
########################################
---------------函数---------------
date_trunc(text,interval)
---------------返回类型---------------
interval
---------------描述---------------
功能同上，只是第二个入参为时间间隔
---------------示例---------------
select date_trunc('hour',interval'1 year 2 mon 3 day 22:30:33');
---------------结果---------------
1 year 2 mons 3 days 22:00:00
########################################
---------------函数---------------
extract(fieldfromtimestamp)
---------------返回类型---------------
double precision
---------------描述---------------
功能同date_part(text,timestamp)
---------------示例---------------
select extract(hour from timestamp'2016-07-08 22:30:29');
---------------结果---------------
22
########################################
---------------函数---------------
extract(fieldfrominterval)
---------------返回类型---------------
double precision
---------------描述---------------
功能同date_part(text,interval)
---------------示例---------------
select extract(hour from interval'1 day 13:00:12');
---------------结果---------------
13
########################################
---------------函数---------------
isfinite(date)
---------------返回类型---------------
boolean
---------------描述---------------
测试是否为有穷日期
---------------示例---------------
select isfinite(date'2016-07-08'),isfinite(date'infinity');
---------------结果---------------
t,f
########################################
---------------函数---------------
isfinite(timestamp)
---------------返回类型---------------
boolean
---------------描述---------------
测试是否为有穷时间戳
---------------示例---------------
select isfinite(timestamp'2016-07-08');
---------------结果---------------
t
########################################
---------------函数---------------
isfinite(interval)
---------------返回类型---------------
boolean
---------------描述---------------
测试是否为有穷时间间隔
---------------示例---------------
select isfinite(interval'1day 23:02:12');
---------------结果---------------
t
########################################
---------------函数---------------
justify_days(interval)
---------------返回类型---------------
interval
---------------描述---------------
按照每月30天调整时间间隔
---------------示例---------------
select justify_days(interval'1year 45days 23:00:00');
---------------结果---------------
1 year 1 mon 15 days 23:00:00
########################################
---------------函数---------------
justify_hours(interval)
---------------返回类型---------------
interval
---------------描述---------------
按照每天24小时调整时间间隔
---------------示例---------------
select justify_hours(interval'1year 45days 343hour');
---------------结果---------------
1 year 59 days 07:00:00
########################################
---------------函数---------------
justify_interval(interval)
---------------返回类型---------------
interval
---------------描述---------------
同时使用justify_days(interval)和justify_hours(interval)
---------------示例---------------
select justify_interval(interval'1year 45days 343hour');
---------------结果---------------
1 year 1 mon 29 days 07:00:00
########################################
---------------函数---------------
localtime
---------------返回类型---------------
time
---------------描述---------------
当日时间
---------------示例---------------
select localtime;
---------------结果---------------
15:45:18.892000
########################################
---------------函数---------------
localtimestamp
---------------返回类型---------------
timestamp
---------------描述---------------
当日日期和时间
---------------示例---------------
select localtimestamp;
---------------结果---------------
2016-07-08 15:46:55.182000
########################################
---------------函数---------------
make_date(yearint,monthint,dayint)
---------------返回类型---------------
date
---------------描述---------------
创建一个日期
---------------示例---------------
select make_date(2016,7,8);
---------------结果---------------
2016-07-08 00:00:00
########################################
---------------函数---------------
make_interval(yearsintDEFAULT 0,monthsintDEFAULT 0,weeksintDEFAULT 0,daysintDEFAULT 0,hoursintDEFAULT 0,minsintDEFAULT 0,secsdouble precisionDEFAULT 0.0)
---------------返回类型---------------
interval
---------------描述---------------
创建一个时间间隔
---------------示例---------------
select make_interval(1,hours=>3);
---------------结果---------------
1 year 03:00:00
########################################
---------------函数---------------
make_time(hourint,minint,secdouble precision)
---------------返回类型---------------
time
---------------描述---------------
创建一个时间
---------------示例---------------
select make_time(9,21,23);
---------------结果---------------
09:21:23
########################################
---------------函数---------------
make_timestamp(yearint,monthint,dayint,hourint,minint,secdouble precision)
---------------返回类型---------------
timestamp
---------------描述---------------
创建一个时间戳
---------------示例---------------
select make_timestamp(2016,7,8,22,55,23.5);
---------------结果---------------
2016-07-08 22:55:23.500000
########################################
---------------函数---------------
make_timestamptz(yearint,monthint,dayint,hourint,minint,secdouble precision, [timezonetext])
---------------返回类型---------------
timestamp with time zone
---------------描述---------------
创建一个带有时区的时间戳
---------------示例---------------
select make_timestamptz(2016,7,8,22,55,23.5);
---------------结果---------------
2016-07-08 22:55:23.500000
########################################
---------------函数---------------
now()
---------------返回类型---------------
timestamp with time zone
---------------描述---------------
当前日期和时间
---------------示例---------------
select now();
---------------结果---------------
2016-07-08 15:55:30.874000
########################################
---------------函数---------------
statement_timestamp()
---------------返回类型---------------
timestamp with time zone
---------------描述---------------
同now()
---------------示例---------------
select statement_timestamp();
---------------结果---------------
2016-07-08 15:56:07.260000
########################################
---------------函数---------------
timeofday()
---------------返回类型---------------
text
---------------描述---------------
当前日期和时间，包含周几，功能与clock_timestamp()类似
---------------示例---------------
select timeofday();
---------------结果---------------
Fri Jul 08 15:57:51.277239 2016 PDT
########################################
---------------函数---------------
transaction_timestamp()
---------------返回类型---------------
timestamp with time zone
---------------描述---------------
事务开始时的时间戳
---------------示例---------------
select transaction_timestamp();
---------------结果---------------
2016-07-08 16:01:25.007000
########################################
---------------函数---------------
to_timestamp(double precision)
---------------返回类型---------------
timestamp with time zone
---------------描述---------------
Convert Unix epoch(seconds since 1970-01-0100:00:00+00) to timestamp
---------------示例---------------
select to_timestamp(1284352323);
---------------结果---------------
2010-09-12 21:32:03
########################################
---------------函数---------------
pg_sleep(seconds double precision);
---------------描述---------------
当前会话休眠seconds秒
---------------示例---------------
select pg_sleep(5);
########################################
---------------函数---------------
pg_sleep_for(interval)
---------------描述---------------
当前会话休眠多长时间的间隔
---------------示例---------------
select pg_sleep_for('5 seconds');
########################################
---------------函数---------------
pg_sleep_until(timestamp with time zone)
---------------描述---------------
当前会话休眠至什么时间点
---------------示例---------------
select pg_sleep_until('2016-07-08 23:59:59');

















