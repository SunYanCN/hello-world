#----coding:utf-8----------------------------------------------------------------
# 名称: SnowNLP: 中文文本分析利器
# 目的:转换成拼音，繁体转简体，提取文本关键词（Textrank算法），提取文本摘要（Textrank算法）
# 参考:http://site.douban.com/146782/widget/notes/15468638/note/320813055/
# 作者:      gswewf
#
# 日期:      2016-01-19
# 版本:      Python 3.3.5
# 系统:      win32
# Email:     gswewf@126.com
#-------------------------------------------------------------------------------
'''
通过pip安装后

import snownlp
报错，提示seg.marshal文件有问题


因为marshal在python不同版本不太一致，不过当初为了速度考虑用了marshal，而且当时考虑python3也做了下面的数据文件，
大概python3之间还是有差异的吧，现在的解决方案就是按照readme里的训练方式弄出数据文件并顶替掉我原来的文件，训练时要先把这三行先注释掉就好
https://github.com/isnowfy/snownlp/blob/master/snownlp/sentiment/__init__.py#L47
https://github.com/isnowfy/snownlp/blob/master/snownlp/seg/__init__.py#L12
https://github.com/isnowfy/snownlp/blob/master/snownlp/tag/__init__.py#L12


来源：https://github.com/isnowfy/snownlp/issues/23


现在提供训练的包括分词，词性标注，情感分析，而且都提供了我用来训练的原始文件 以分词为例 分词在snownlp/seg目录下

from snownlp import seg
seg.train(r'E:\Python33\Lib\site-packages\snownlp\seg\data.txt')
seg.save(r'E:\Python33\Lib\site-packages\snownlp\seg\seg.marshal')
>>> from snownlp import tag
>>> tag.train(r'E:\Python33\Lib\site-packages\snownlp\tag\199801.txt')
>>> tag.save(r'E:\Python33\Lib\site-packages\snownlp\tag\tag.marshal')
>>> from snownlp import sentiment
>>> sentiment.train(r'E:\Python33\Lib\site-packages\snownlp\sentiment\neg.txt', r'E:\Python33\Lib\site-packages\snownlp\sentiment\pos.txt')
#sentiment.save(r'E:\Python33\Lib\site-packages\snownlp\sentiment\sentiment.marshal')
这样训练好的文件就存储为seg.marshal了，之后修改snownlp/seg/__init__.py里的data_path指向刚训练好的文件即可

'''

from snownlp import SnowNLP

#停用词文件位置：r'E:\Python33\Lib\site-packages\snownlp\normal\stopwords.txt

s = SnowNLP('这个东西真心很赞')

#分词
print(s.words) #['这个', '东西', '真心', '很', '赞']

#词性标注
for i in s.tags:
	print(i)


('这个', 'r')
('东西', 'n')
('真心', 'd')
('很', 'd')
('赞', 'Vg')

#情感分析（现在训练数据主要是买卖东西时的评价，所以对其他的一些可能效果不是很好，待解决）
print(s.sentiments) #0.9767933876958791

#转换成拼音
print(s.pinyin) #['zhe', 'ge', 'dong', 'xi', 'zhen', 'xin', 'hen', 'zan']

#繁体转简体
s = SnowNLP('「繁體字」「繁體中文」的叫法在臺灣亦很常見。')
print(s.han)#'「繁体字」「繁体中文」的叫法在台湾亦很常见。'

text = '''
自然语言处理是计算机科学领域与人工智能领域中的一个重要方向。
它研究能实现人与计算机之间用自然语言进行有效通信的各种理论和方法。
自然语言处理是一门融语言学、计算机科学、数学于一体的科学。
因此，这一领域的研究将涉及自然语言，即人们日常使用的语言，
所以它与语言学的研究有着密切的联系，但又有重要的区别。
自然语言处理并不是一般地研究自然语言，
而在于研制能有效地实现自然语言通信的计算机系统，
特别是其中的软件系统。因而它是计算机科学的一部分。
'''
s = SnowNLP(text)

#提取文本关键词
print(s.keywords(3)) #['语言', '自然', '计算机']

#提取文本摘要
print(s.summary(3))#['因而它是计算机科学的一部分', '自然语言处理是计算机科学领域与人工智能领域中的一个重要方向', '自然语言处理是一门融语言学、计算机科学、数学于一体的科学']

#分割成句子
print(s.sentences) #['自然语言处理是计算机科学领域与人工智能领域中的一个重要方向', '它研究能实现人与计算机之间用自然语言进行有效通信的各种理论和方法', '自然语言处理是一门融语言学、计算机科学、数学于一体的科学', '因此', '这一领域的研究将涉及自然语言', '即人们日常使用的语言', '所以它与语言学的研究有着密切的联系', '但又有重要的区别', '自然语言处理并不是一般地研究自然语言', '而在于研制能有效地实现自然语言通信的计算机系统', '特别是其中的软件系统', '因而它是计算机科学的一部分']


s = SnowNLP([['这篇', '文章'],
             ['那篇', '论文'],
             ['这个']])

#词频 tf
print(s.tf) # [{'文章': 1, '这篇': 1}, {'论文': 1, '那篇': 1}, {'这个': 1}]

#IDF
print(s.idf)#{'文章': 0.5108256237659907, '这篇': 0.5108256237659907, '论文': 0.5108256237659907, '那篇': 0.5108256237659907, '这个': 0.5108256237659907}

#文本相似
print(s.sim(['文章'])) #[0.4686473612532025, 0, 0]

#文本分类（Naive Bayes）
data=[('另外，龙华现代有轨电车试验线总投资约24 .2亿元，已完成投资1 .95亿元，主体工程完成2 .3%，同步实施的道路改造、绿化迁移、管线改迁等工程完成19.3%，力争于2017年1月开通试运行。深圳同步开展运营管理立法，正在组织研究制订《有轨电车驾驶资格及车辆牌证管理办法》、《有轨电车沿线道路通行秩序管理办法》、《现代有轨电车运营服务管理办法》。相关管理办法已完成初稿，力争2016年底前完成立法工作。',2),
    ('根据深圳轨道交通三期工程建设规划，预计到2020年，深圳轨道交通将形成11条完整线路、435公里轨道交通网络。深圳就此形成16个项目，总长411公里，拟总投资3248亿元的建议上报方案。目前正进一步梳理各专家、各区政府的意见，修改完善方案，力争今年一季度形成轨道交通四期建设规划方案上报国家有关部门审批。',2),
    ('2015年市政府加大财政直接投资支持力度，拨付679 .96亿元财政资金给地铁集团，是历年来支持力度最大的一年。同时，市轨道办会同市交通运输委、财政委等有关部门，正在综合考虑深圳运营和财政实际情况，研究完善深圳轨道交通运营补贴机制。按照《办理方案》的要求，市政府还将于2016年底向市人大常委会报告该项重点建议的办理情况。',2),
    ('近日，网友拍摄到了在船厂里的中国第2艘万吨级海警执法船，该船已经完成建造，整装待发，即将加入到中国海上执维权执法的序列中，未来或部署南海。该船编号3901的海警船满载排水量超过万吨，将成为我国海上执法力量的中流砥柱。另据报道，首艘同型万吨海警船2901号在建造完成后，已经进驻舟山。',1),
    ('长期以来，中国的海上执法力量一直处于劣势地位。海上执法船吨位太小，火力太弱，再加上“九龙闹海”的局面，所以常常遭受一些国家的欺凌。曾几何时，为了维护自己的海洋权益，中国不得不派遣军舰同对方的执法船对峙。这种做法一方面容易授人以口实，另一方面不好把控冲突的烈度。近年来，中国海上执法力量励精图治，不但结束了力量分散的局面，而且建造了一大批优秀的海上执法船，其中就包括本文的主角海警2901船。',1),
    ('近日，海警2901船已经开始海试。该船有两大特点，一是吨位大，二是火力强。海警2901船在首部安装了76毫米舰炮，同美国现役“汉密尔顿”级巡逻舰安装的火炮属于同一口径。此外，该船的吨位达到了惊人的1.2万吨，取代“敷岛”级成为世界上最大的海警船。',1)
    ]

from snownlp import classification
s=classification.bayes.Bayes()
s.train (data)
print(s.classify ('深圳地铁11号线试运营')) #返回：（所属类别，概率）
print(s.classify ('中国最大的海警船'))

def main():
    pass

if __name__ == '__main__':
    main()
