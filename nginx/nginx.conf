user www-data;
worker_processes 1;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    upstream frontends {
        server 127.0.0.1:8000;
    }
    upstream wx {
        server 127.0.0.1:8888;
        # server 10.13.158.31:18000;
    }
    upstream zh {
        server 127.0.0.1:8001;
    }
    upstream admin {
        server 10.13.152.176:8001;
    }
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;


    # 通过X-Forwarded-For头部提供的原始客户端IP（当请求经过代理时）
    # 请注意这种方式仍然存在安全隐患，因为`X-Forwarded-For`可以被篡改。
    #http_x_forwarded_for地址不在下列IP中则location那里返回403
    map $http_x_forwarded_for $accessip {
	default false;
	#10.10.10.10(IP匹配)
	10.10.10.10 true;
	10.10.10.11 true; 
	10.10.10.12 true;  
	#10.10.50.0/24(网段匹配)
	~*10.10.50. true;
    }


    #  客户端（浏览器）的IP地址，这里是请求服务器的用户的网络地址。
    # 允许指定IP或IP范围访问,注意若某IP先可以浏览器访问，后面禁止了，若浏览器在禁止后没有刷新，则还是可以访问的，除非主动刷新才会报403错误；
    allow 192.168.1.0/24;   # 允许192.168.1.* 访问
    allow 192.168.2.30;     # 允许单一IP访问
    allow 192.168.3.40;     # 允许另一个单一IP访问

    # 拒绝所有其他IP访问
    deny all;


    keepalive_timeout 65;
    proxy_read_timeout 200;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the Tornado server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    server {
        listen 80;

        # Allow file uploads
        client_max_body_size 50M;

        location ^~ /static/ {
	    #http_x_forwarded_for地址不在下列IP中则返回403
	    if ( $accessip = 'false') {return 403;}

            root /var/www;
            if ($query_string) {
                expires max;
            }
        }
        location = /favicon.ico {
            rewrite (.*) /static/favicon.ico;
        }
        location = /robots.txt {
            rewrite (.*) /static/robots.txt;
        }
         
        location /wx { 
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://wx;
        }
        location /zh {

	    #http_x_forwarded_for地址不在下列IP中则返回403
	    set $accessip false;
	    if ( $http_x_forwarded_for = '10.10.10.10' )  {set $accessip true;}
	    if ( $http_x_forwarded_for = '10.10.10.11' )  {set $accessip true;}
	    if ( $http_x_forwarded_for = '10.10.10.12' )  {set $accessip true;}
	    if ( $http_x_forwarded_for = '192.168.1.1' )  {set $accessip true;}
	    if ( $accessip = 'false') {return 403;}
 
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://zh;
        }
        location /test { 
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://10.13.158.31:18000/;
        }

        location /admin {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://admin/;
          }
 

        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }
        location /v1 {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://127.0.0.1:9000/;
        }
   }
   server{
    listen 7771;
        location / {
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://127.0.0.1:7770/;
        }
    } 
}
