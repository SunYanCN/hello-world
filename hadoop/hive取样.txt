
数据块取样（Block Sampling）；使用 tablesample 抽取指定的 行数/比例/大小
SELECT * FROM ods_user_data TABLESAMPLE(1000 ROWS);
SELECT * FROM ods_user_data TABLESAMPLE (20 PERCENT); 
SELECT * FROM ods_user_data TABLESAMPLE(1M); 
注意：这里指定的行数，是在每个InputSplit中取样的行数，也就是每个Map中都取样n ROWS
若有5个MapTask(inputSplit),每个map取样200行，一共取样1000行
TABLESAMPLE 抽样函数本身是不走MR 的所以执行速度很快(注意抽取多少M的时候，只能是整数M)
# 但是值得注意的是，ROWS并不代表精确地返回所指定的行数。因为随机选取的单位是数据页，
所以上面指定返回1000行，有可能返回800,900,1200都是有可能的。
如果需要指定准确的行数，可以先随机选取更多的数据，然后再利用TOP关键字，如：
SELECT TOP(1000) *
FROM dbo.Orders TABLESAMPLE (2000 ROWS);
如果需要返回同样的样本数据，使用REPEATABLE关键字，指定某一特定种子，那么
多次执行该条语句返回的样本数据都是一样的。如：
SELECT * FROM dbo.Orders TABLESAMPLE (1000 ROWS) REPEATABLE(40);
数据块抽样（tablesample()函数）, 也通过新建中间表(但是有时候下面的语句会将表abc全部的数据写到表abc_new, tablesample在此无作用)
create table abc_new as select * from abc tablesample(10 percent)
-- tablesample(n percent)根据hive表数据大小按比例抽取，并存到新的hive表中
-- 由于在HDFS块层级进行抽样，所以抽样粒度为块的大小
-- 例如如果块大小为128M，即使输入的n%是50M，也会得到128M的数据, 这也就解释了为何有时候上句中的10 percent无作用的原因；
注：采用create table *** as新建表时不会保留原始表的分区信息；通过create table xxx like xxxx;会保留分区信息
可通过类似下命名查看分块文件大小：
hadoop dfs -du -h hdfs://hdfs01-sh/user/hive/warehouse/hivd_db.db/table_name

TABLESAMPLE的具体算法
如A表有100行，有3个数据页，分别有数据 18,32,50。假设指定选取2行数据，系统首先会计算出页面选取概率，算法为：2/100 = 1/50。
很容易能计算出，该条语句不返回任何行的概率为 (1 - 1/50) ^ 3 = 94%。返回18行的概率为 (1 - 1/50) * 1/50 * 1/50 =3.92%。可见TABLESAMPLE不适宜选取少量数据。

如果需要选取少量数据，可用下面方法：
SELECT TOP(n) * FROM dbo.Orders ORDER BY NEWID();
注意：该种方法要慢很多。

分桶表取样（Sampling Bucketized Table）
 Hive中的分桶表（Bucket Table），根据某一个字段Hash取模，放入指定数据的桶中，比如将表table1按照ID分成100个桶，其算法是hash(id) % 100，这样，hash(id) % 100 = 0的数据被放到第一个桶中，hash(id) % 100 = 1的记录被放到第二个桶中。
分桶表取样的语法:
table_sample: TABLESAMPLE (BUCKET x OUT OF y [ON colname])
其中x是要抽样的桶编号，桶编号从1开始，colname表示抽样的列，y表示桶的数量。 
SELECT COUNT(1) FROM table1 TABLESAMPLE (BUCKET 1 OUT OF 10 ON rand());
该sql语句表示将表table1随机分成10个桶，抽样第一个桶的数据，出来的结果基本上是原表的十分之一，
注意：这个结果每次运行是不一样的，是按照随机数进行分桶取样的。
如果基于一个已经分桶表进行取样，将会更有效率。
如果从源表中直接分桶抽样，也能达到一样的效果，比如：
SELECT COUNT(1) FROM table1 TABLESAMPLE(BUCKET 1 OUT OF 10 ON id);
区别在于基于已经分桶的表抽样，查询只会扫描相应桶中的数据，而未分桶表的抽样，查询时候需要扫描整表数据，先分桶，再抽样。
例如：将表随机分成10组，抽取其中的第一个桶的数据
select * from table_01 tablesample(bucket 1 out of 10 on rand()) where p_day=20190508 limit 10;
# 在指定分区(这里dt为分区字段)分桶采样：
select * from hive_db.table_name tablesample (50000 ROWS) where dt='201903';
# 对字段进行分桶（将表name字段随机分成10组，抽取其中的第一个桶的数据），并指定分区（dt=201903）采样（下面方法速度较慢，会全表扫描）：
select * from hive_db.table_name tablesample (bucket 1 out of 10 on name) where dt='201903' limit 50000;

随机取样：
select * from tab order by rand() limit 1000;
select * from ( select e.*, cast(rand() * 100000 as int) as idx from  e ) t order by t.idx limit 1000;
表e为一个存有数据普通表，我们要从表e中随机抽出1000条数据作为数据样本。
rand() 函数产生一个0到1的随机数字，cast(rand() * 100000 as int) as idx为一个0到100000之间的一个随机整数。

使用order by rand()会对结果进行随机排序
这个不是分组，只是排序，rand()只是生成一个随机数。
ORDER By rand()，这样每次检索的结果排序会不同
select * from student order by rand()
select *,row_number() over(partition by icon_nm order by rand() desc) as rk from table

rand() 产生一个介于0和1之间的随机数
select rand();
# 0.5523740163966064
# 指定随机种子，以后使用这个种子每次产生的随机数都是一样的。
select rand(1234);

# 数据随机排序后取前100条
select uid from tablename order by rand(1234) limit 100;
# 备注： 这个不是分组，只是排序，rand()只是生成一个随机数。
# 因为要扫描整个表，然后返回，一旦记录超过30W行，这个处理过程就会变得非常缓慢,可能造成服务器死机,因为排序时需要大量的磁盘空间.




