
通过查询结构调整相关度

ES提供的查询DSL是相当灵活的。你可以通过将单独的查询子句在查询层次中上下移动来让它更重要/更不重要。比如，下面的查询：

quick OR brown OR red OR fox
我们可以使用一个bool查询，对所有词条一视同仁：

GET /_search
{
  "query": {
    "bool": {
      "should": [
        { "term": { "text": "quick" }},
        { "term": { "text": "brown" }},
        { "term": { "text": "red"   }},
        { "term": { "text": "fox"   }}
      ]
    }
  }
}
但是这个查询会给一份含有quick，red及brown的文档和一份含有quick，red及fox的文档完全相同的分数，然而在合并查询(Combining Queries)中，我们知道bool查询不仅能够决定一份文档是否匹配，同时也能够知道该文档的匹配程度。

下面是更好的查询方式：

GET /_search
{
  "query": {
    "bool": {
      "should": [
        { "term": { "text": "quick" }},
        { "term": { "text": "fox"   }},
        {
          "bool": {
            "should": [
              { "term": { "text": "brown" }},
              { "term": { "text": "red"   }}
            ]
          }
        }
      ]
    }
  }
}
现在，red和brown会在同一层次上相互竞争，而quick，fox以及red或者brown则是在顶层上相互对象的词条。

我们已经讨论了match，multi_match，term，book以及dis_max是如何对相关度分值进行操作的。在本章的剩余部分，我们会讨论和相关度分值有关的另外三种查询：boosting查询，constant_score查询以及function_score查询。

不完全的不(Not Quite Not)

在互联网上搜索"苹果"也许会返回关于公司，水果或者各种食谱的结果。我们可以通过排除pie，tart，crumble和tree这类单词，结合bool查询中的must_not子句，将结果范围缩小到只剩苹果公司：

GET /_search
{
  "query": {
    "bool": {
      "must": {
        "match": {
          "text": "apple"
        }
      },
      "must_not": {
        "match": {
          "text": "pie tart fruit crumble tree"
        }
      }
    }
  }
}
但是有谁敢说排除了tree或者crumble不会将一份原本和苹果公司非常相关的文档也排除在外了呢？有时，must_not过于严格了。

boosting查询

boosting查询能够解决这个问题。它允许我们仍然将水果或者食谱相关的文档考虑在内，只是会降低它们的相关度 - 将它们的排序更靠后：

GET /_search
{
  "query": {
    "boosting": {
      "positive": {
        "match": {
          "text": "apple"
        }
      },
      "negative": {
        "match": {
          "text": "pie tart fruit crumble tree"
        }
      },
      "negative_boost": 0.5
    }
  }
}
它接受一个positive查询和一个negative查询。只有匹配了positive查询的文档才会被包含到结果集中，但是同时匹配了negative查询的文档会被降低其相关度，通过将文档原本的_score和negative_boost参数进行相乘来得到新的_score。

因此，negative_boost参数必须小于1.0。在上面的例子中，任何包含了指定负面词条的文档的_score都会是其原本_score的一半。

{
  "query": {
    "match": {
      "query_question": {
        "query": "什么情况下可以赔",
        "minimum_should_match": "30%"
      }
    }
  },
  "size": 10
}
正常情况下，会匹配到“什么情况下不赔”
改用下面的查询语句，“什么情况下不赔”,排序就靠后了
{
  "query": {
    "boosting": {
      "positive": {
        "match": {
          "query_question": "什么情况下可以赔"
        }
      },
      "negative": {
        "match_phrase": {
          "query_question": "不赔"
        }
      },
      "negative_boost": 0.5
    }
  }
}

或者：
{
  "query": {
    "boosting": {
      "positive": {
        "match": {
          "query_question": "什么情况下可以赔"
        }
      },
      "negative": {
        "bool": {
          "should": [
            {
              "match_phrase": {
                "query_question": "不赔"
              }
            },
            {
              "match_phrase": {
                "query_question": "不保"
              }
            }
          ]
        }
      },
      "negative_boost": 0.5
    }
  }
}

或者2：
{
  "query": {
    "boosting": {
      "positive": {
        "bool": {
          "should": [
            {
              "match": {
                "query_question": "什么情况下可以赔"
              }
            },
            {
              "match_phrase": {
                "query_question": {
                  "query": "赔",
                  "boost": 20
                }
              }
            }
          ]
        }
      },
      "negative": {
        "bool": {
          "should": [
            {
              "match_phrase": {
                "query_question": "不赔"
              }
            },
            {
              "match_phrase": {
                "query_question": "不保"
              }
            }
          ]
        }
      },
      "negative_boost": 0.5
    }
  }
}

boost参数被用来增加一个子句的相对权重(当boost大于1时)，或者减小相对权重(当boost介于0到1时)，但是增加或者减小不是线性的。换言之，boost设为2并不会让最终的_score加倍。
相反，新的_score会在适用了boost后被归一化(Normalized)。每种查询都有自己的归一化算法(Normalization Algorithm)。但是能够说一个高的boost值会产生一个高的_score。
如果你在实现你自己的不基于TF/IDF的相关度分值模型并且你需要对提升过程拥有更多的控制，你可以使用function_score查询，它不通过归一化步骤对文档的boost进行操作。

curl -X GET "localhost:9200/_search?pretty" -H 'Content-Type: application/json' -d'
{
  "query": {
    "function_score": {
      "query": { "match_all": {} },
      "boost": "5", 
      "functions": [
        {
          "filter": { "match": { "test": "bar" } },
          "random_score": {}, 
          "weight": 23
        },
        {
          "filter": { "match": { "test": "cat" } },
          "weight": 42
        }
      ],
      "max_boost": 42,
      "score_mode": "max",
      "boost_mode": "multiply",
      "min_score": 42
    }
  }
}
'

如果没有使用函数给出过滤器query，则这等效于指定 "match_all": {}
首先，每个文档都由定义的函数评分。参数 score_mode指定如何组合functions计算的分数：
multiply 分数相乘（默认）
sum 分数相加
avg 分数是平均的
first 应用具有匹配过滤器的第一个函数
max 使用最高分
min 使用最低分数

可以通过设置max_boost参数来限制新的分数不超过一定的限制。默认max_boost值为 FLT_MAX。
每个函数的分数可以使用用户定义的 weight 进行调整。weight可以在functions数组中每个函数定义，并乘以相应函数计算的分数。
min_score参数可以置为所需的分数阈值,以排除不满足某个分数阈值的文档。
为了min_score工作，查询返回的所有文档都需要进行评分，然后一一过滤掉。

参数boost_mode定义，新计算的函数分数与查询的分数如何结合：
multiply 查询分数和函数分数相乘（默认）
replace 仅使用函数分数，忽略查询分数
sum 查询分数和函数分数相加
avg 平均的
max 查询分数和函数分数的最大值
min 查询分数和函数功能分数的最小值

function_score查询提供了如下几种类型的评分函数：
script_score
weight
random_score
field_value_factor
decay functions: gauss, linear, exp

script_score函数允许您包装另一个查询并自定义它的评分，可以选择使用脚本表达式从文档中的其他数字字段值派生的计算。
分数必须为非负数。否则，Elasticsearch 会返回错误。
random_score:会使得ES查询结果有一定的随机性；每次的结果不一致；

function_score评分示例：
{
  "size": 10,
  "query": {
    "function_score": {
      "score_mode": "max",
      "functions": [
        {
          "filter": {
            "match": {
              "name": "潮loft"
            }
          },
          "script_score": {
            "script": {
              "params": {
                "a": 5,
                "b": 1.2
              },
              "source": "params.a / Math.pow(params.b, doc['name.keyword'].value.length())"
            }
          }
        },
        {
          "filter": {
            "terms": {
              "name.keyword": [
                "ALOFT"
              ]
            }
          },
          "weight": 10
        },
        {
          "filter": {
            "terms": {
              "level2.keyword": [
                "面包甜点",
                "其它美食"
              ]
            }
          },
          "weight": 0.5
        },
        {
          "filter": {
            "terms": {
              "level2.keyword": [
                "商务住宅相关",
                "商场"
              ]
            }
          },
          "random_score": {},  
          "weight": 1.2
        }
      ],
      "query": {
        "bool": {
          "must": [
            {
              "match": {
                "city.keyword": "深圳市"
              }
            },
            {
              "dis_max": {
                "queries": [
                  {
                    "match": {
                      "name.keyword": {
                        "query": "ALOFT",
                        "boost": 600
                      }
                    }
                  },
                  {
                    "match_phrase": {
                      "name": {
                        "query": "ALOFT",
                        "boost": 400
                      }
                    }
                  },
                  {
                    "match": {
                      "name": {
                        "query": "A LOFT",
                        "boost": 200
                      }
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "boost_mode": "multiply"
    }
  }
}

参考资料：https://www.elastic.co/guide/en/elasticsearch/reference/8.2/query-dsl-function-score-query.html

注意：function_score查询是及其消耗资源的，哪怕其functions部分为空：

# 案例1：1亿数据量，原始query, 耗时50s
{"query": {"function_score": {"boost_mode": "multiply",
                              "functions": [],
                              "query": {"dis_max": {"queries": [{"bool": {"boost": 100,
                                                                          "filter": {"bool": {"must": [{"match": {"province.keyword": "广东省"}}]}},
                                                                          "must": [{"dis_max": {"queries": [{"match": {"address.keyword": {"boost": 5,
                                                                                                                                           "query": "北四经街16丙2-3-1室"}}},
                                                                                                            {"match_phrase": {"address": {"boost": 3,
                                                                                                                                          "query": "北四经街16丙2-3-1室"}}},
                                                                                                            {"match": {"address": {"boost": 1,
                                                                                                                                   "query": "北四经街16丙2-3-1室"}}}]}}],
                                                                          "should": [{"match": {"area.keyword": {"boost": 0.01,
                                                                                                                 "query": "和平县"}}}]}},
                                                                {"bool": {"boost": 100,
                                                                          "filter": {"bool": {"must": []}},
                                                                          "must": [{"dis_max": {"queries": [{"match": {"address.keyword": {"boost": 5,
                                                                                                                                           "query": "北四经街16丙2-3-1室"}}},
                                                                                                            {"match_phrase": {"address": {"boost": 3,
                                                                                                                                          "query": "北四经街16丙2-3-1室"}}},
                                                                                                            {"match": {"address": {"boost": 1,
                                                                                                                                   "query": "北四经街16丙2-3-1室"}}}]}}],
                                                                          "should": [{"match": {"area.keyword": {"boost": 0.01,
                                                                                                                 "query": "和平区"}}}]}},
                                                                {"dis_max": {"boost": 300,
                                                                             "queries": [{"match": {"address.keyword": {"boost": 5,
                                                                                                                        "query": "和平区北四经街16丙2-3-1室"}}},
                                                                                         {"match_phrase": {"address": {"boost": 3,
                                                                                                                       "query": "和平区北四经街16丙2-3-1室"}}}]}}]}},
                              "score_mode": "max"}},
"size": 10}

# 案例1，修改后：删除function_score查询，耗时降低到原有1/10,仅5s:
{"query": {"dis_max": {"queries": [{"bool": {"boost": 100,
                                                                          "filter": {"bool": {"must": [{"match": {"province.keyword": "广东省"}}]}},
                                                                          "must": [{"dis_max": {"queries": [{"match": {"address.keyword": {"boost": 5,
                                                                                                                                           "query": "北四经街16丙2-3-1室"}}},
                                                                                                            {"match_phrase": {"address": {"boost": 3,
                                                                                                                                          "query": "北四经街16丙2-3-1室"}}},
                                                                                                            {"match": {"address": {"boost": 1,
                                                                                                                                   "query": "北四经街16丙2-3-1室"}}}]}}],
                                                                          "should": [{"match": {"area.keyword": {"boost": 0.01,
                                                                                                                 "query": "和平县"}}}]}},
                                                                {"bool": {"boost": 100,
                                                                          "filter": {"bool": {"must": []}},
                                                                          "must": [{"dis_max": {"queries": [{"match": {"address.keyword": {"boost": 5,
                                                                                                                                           "query": "北四经街16丙2-3-1室"}}},
                                                                                                            {"match_phrase": {"address": {"boost": 3,
                                                                                                                                          "query": "北四经街16丙2-3-1室"}}},
                                                                                                            {"match": {"address": {"boost": 1,
                                                                                                                                   "query": "北四经街16丙2-3-1室"}}}]}}],
                                                                          "should": [{"match": {"area.keyword": {"boost": 0.01,
                                                                                                                 "query": "和平区"}}}]}},
                                                                {"dis_max": {"boost": 300,
                                                                             "queries": [{"match": {"address.keyword": {"boost": 5,
                                                                                                                        "query": "和平区北四经街16丙2-3-1室"}}},
                                                                                         {"match_phrase": {"address": {"boost": 3,
                                                                                                                       "query": "和平区北四经街16丙2-3-1室"}}}]}}]}}
}

# 案例2：原始查询语句，耗时39s：
{"query": {"function_score": {"boost_mode": "multiply",
                              "functions": [{"filter": {"bool": {"must": [{"match": {"road.keyword": "北四经街"}},
                                                                          {"match": {"roadno.keyword": "7号"}}]}},
                                             "weight": 12}],
                              "query": {"dis_max": {"queries": [{"match": {"address.keyword": {"boost": 5,
                                                                                               "query": "北四经街7号"}}},
                                                                {"match_phrase": {"address": {"boost": 3,
                                                                                              "query": "北四经街7号"}}},
                                                                {"match": {"address": {"boost": 1,
                                                                                       "query": "北四经街7号"}}}]}},
                              "score_mode": "max"}},
"size": 10}

# 案例2，修改后：删除function_score，修改为rescore重新评分，耗时降低为2s:
{"query": {"dis_max": {"queries": [{"match": {"address.keyword": {"boost": 5,
                                                                                               "query": "北四经街7号"}}},
                                                                {"match_phrase": {"address": {"boost": 3,
                                                                                              "query": "北四经街7号"}}},
                                                                {"match": {"address": {"boost": 1,
                                                                                       "query": "北四经街7号"}}}]}},
   "rescore" : {
      "window_size" : 50,
      "query" : {
         "score_mode": "multiply",
         "rescore_query" : {
            "bool": {"must": [{"match": {"road.keyword": "北四经街"}},
                              {"match": {"roadno.keyword": "7号"}}]}
         },
         "query_weight" : 0.7,
         "rescore_query_weight" : 1.2
      }
   },
"size": 10}