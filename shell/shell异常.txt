1、shell编程中星号("*")的坑 
问题，shell脚本中，写 hql = "select * from table_name"
echo $hql,得到的结果却变了，星号*用当前目录中的所有文件替代了；
问题解析：
shell在执行echo命令之前，检查命令的参数中是否有通配符（PS：此时echo的参数：select * from table_name）
很明显，*是通配符，shell负责解析通配符，shell会将通配符当作路径或文件名在磁盘上搜寻可能的匹配：若符合要求的匹配存在，则进行替换(路径扩展)；否则就将该通配符作为一个普通字符参数传递给echo，然后再由echo进行处理。
通配符看起来有点像正则表达式，但是它与正则表达式不同的，不能相互混淆。可以把通配符理解为shell能够处理的特殊字符。而且shell的通配符涉及的只有 "*, ?, [], {}" 这几种。
解决方法：
使用引用变量："$hql"，在两端加上引号，这样"$hql"就变成了一个字符串"select * from table_name"，而不是几个单独的字符串。
引用变量可防止分词和通配符扩展（也就是shell解析通配符），并且可以防止在变量中包含空格、换行符、通配符等时造成脚本中断。
在shell编程中总是使用引用变量的方式，这是一个良好又安全的编码习惯。





