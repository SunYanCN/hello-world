
# pycharm远程开发调试:
1、安装pycharm专业版，社区版无此功能
2、配置远程Python解释器
选择File | Settings，选择Project | Project Interpreter，然后在右边，点击那个小齿轮设置，
然后点击”Add Remote”，勾选“SSH Credentials”,填写主机的ssh配置
如果之前配置过SFTP的话就直接选“Deployment configuration”.
3、远程服务器的同步配置
首先我们需要配置PyCharm通服务器的代码同步，打开Tools | Deployment | Configuration
点击左边的“+”添加一个部署配置，输入名字，类型选SFTP

确定之后，再配置远程服务器的ip、端口、用户名和密码。root path是文件上传的根目录，注意这个目录必须用户名有权限创建文件。
然后配置映射，local path是你的工程目录，就是需要将本地这个目录同步到服务器上面
如果你还有一些文件或文件夹不想同步，那么在配置对话框的第三个tab页“Excluded path”里面添加即可，可同时指定本地和远程。
还有一个设置，打开Tools | Deployment | Options，将”Create Empty directories”打上勾，要是指定的文件夹不存在，会自动创建。
上传和下载文件
有几种方法可以实现本地和远程文件的同步，手动和当文件保存后自动触发。这里我选择了手动，因为自动触发比如影响性能，PyCharm会卡，感觉不爽。
手动上传方式很简单，选择需要同步的文件或文件夹，然后选择 Tools | Deployment | Upload to sftp(这个是刚刚配置的部署名称)

下载文件也是一样，选择 Tools | Deployment | Download from sftp
比较远程和本地文件
有时候你并不确定远程和本地版本的完全一致，需要去比较看看。PyCharm提供了对比视图来为你解决这个问题。
选择Tools | Deployment | Browse Remote Host，打开远程文件视图，在右侧窗口就能看到远程主机中的文件

选择一个你想要对比的文件夹，点击右键->Sync with Local，打开同步对比窗口，使用左右箭头来同步内容。
上面是服务器与本地对比，那么本地文件通服务器对比，就先在PyCharm里面选择文件或文件夹，然后右键->Deployment->Sync with deployed to即可

pycharm 打开 带有本地图片的markdown格式文件时，闪退，直接退出pycharm；
问题原因：martdown 自带“Markdown support”插件原因；
解决方案：
在File -> settings -> plugins -> installed中查看是否有“Markdown support”插件，若有，则取消对应的勾选，点击应用“Apply”；
并在在Marketplace中搜索安装Markdown Image Kit插件即可。


PyCharm中利用正则表达式进行 print 的替换
PyCharm中，Ctrl + R批量替换，勾选Regex，输入：
find: print (.*?);?$
replace: print\($1\)
就可以利用正则表达式，将 python2中的 print一键替换为 python3的 print()。

windows系统，pycharm启动很慢，indexing很久；
主要原因是Anaconda3目录太大。
conda 安装的包都在目录Anaconda/pkgs下。随着使用，conda 安装的包也越来越多；有时候会出现以下不好的情况：
有些包安装之后，从来没有使用过；
一些安装包的tar包也保留在了计算机中；
由于依赖或者环境等原因，某些包的不同版本重复安装。
上面的这些情况使得anaconda显得更加冗余，并且浪费储存；对于这些情况可以使用conda clean 净化Anaconda。
# 删除从不使用的包
~$ conda clean --packages
# 删除tar包
$ conda clean --tarballs
# 删除索引缓存、锁定文件、未使用过的包和tar包。
$ conda clean -a

# pycharm 清理缓存的方法：
File -> Invalidate Caches / Restart...
出现弹框有四个选项：Invalidate and Restart（清空缓存并重启）、 Invalidate（清空缓存）、Cancel（取消）和Just Restart（仅重启）.

# pycharm 背景色的设置，设置背景为白色
Files--Settings--Appearance&Behavior--Appearance--Theme,选择Intelli Light

# pycharm 无法代码自动补全：
1，关闭掉 省电模式：
File -> Power Save Mode, 取消勾选；
2，设置editor
File -> setting -> Editor -> Inspections -> 勾选上 Python 和 Spelling 

# 关闭自动换行
有时候一行内容过多，pycharm在显示的时候会多行显示，关闭自动换行的方法：
方法1（仅对当前Py文件）：View ->  Active Editor -> 取消勾选 Use Soft Wraps
对所有文件都起到效果，就要在setting里面进行操作。
方法2（针对所有py文件）：File -> Settings -> Editor -> General -> Use soft wraps in console（不选中则不换行）。

# Pycharm查看变量的方法
在Pycharm界面的右上方，点击运行栏的这个灰色向下箭头，选择“Edit Configurations”，在接下来出现的窗口中，勾选“run with Python console”
设置完成后重启Pycharm，运行程序，点击"show variables"就会出现查看变量的窗口; 即点击左边那个小眼睛。
有时候，在Python Console中，“小眼睛”按钮不见了；这时，点击“Python Console”栏右侧“设置”齿轮状按钮，找到“Show Toolbar”勾选；这时“小眼睛”按钮就出现了，点击即可开启或关闭查看变量“show Variables”；
若想长久关闭，则需：
File -> Settings -> Build, Execution, Deployment -> Console -> 取消勾选："Show console variables by default"

# pycharm Python console 导入包路径设置：
file -> Settings -> Python Console, Starting script 里面输入以下内容：
import sys; print('Python %s on %s' % (sys.version, sys.platform))
# sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])
sys.path.sort()
这样每次进入 Python Console，就能自定义导入包路径了；
若要自动切换到项目路径，则需将变量“WORKING_DIR_AND_PYTHON_PATHS”，添加到 sys.path中；

# pycharm 重命名文件报错：
cannot perform refactoring. selected file is not located inside the project
解决方法：File -> Invalidate Caches，清除缓存，重新启动 IDEA。

# pycharm 配置autopep8
autopep8是一个可以将Python代码自动排版为PEP8风格第三方包，使用它可以轻松地排版出格式优美整齐的代码。
第一步：安装autopep8
File -> Settings -> Project -> Project Interpreter, 在点击右侧加号图标, 进入Avaliable Packages后搜索autopep8, 选中后点击下方的Install Package即可安装。(若发现已经安装了就可以跳过此步)
第二步：配置autopep8到扩展工具（External Tools）
在Pycharm中点击 File--Settings---Tools--External Tools, 点击图中加号图标添加扩展工具
需要填写Name, Program, Arguments, Working directory 以及Output Filters这几项。填写内容如下：
Name：可以随意命名，如：autopep8
Program: 需要填写autopep8.exe的存放路径。如：　　
C:\ProgramData\Anaconda3\Scripts\autopep8.exe
Arguments: 
--in-place --aggressive --aggressive $FilePath$
Woking directory: 
$ProjectFileDir$
Output Filters输入：
$FILE_PATH$:$LINE$:$COLUMN$:.*
点击OK后就配置完成了。
第三步：使用autopep8
打开一个python 的py文件，编写一些不符合pep8格式的代码，然后在编辑区中右键---External Tools--Autopep8, 
即可自动将代码格式调整为pep8的格式。
实际上等价于在命令行运行（此处test123.py即为打开的一个py文件）：
C:\ProgramData\Anaconda3\Scripts\autopep8.exe --in-place --aggressive --aggressive test123.py

# 问题pycharm 中，Pychon Console 终端输出中文乱码，print 中文乱码：
方法1、打印中文之前前面加u
转换成unicode，console也能正常打印
print(u"中文")
方法2、在python文件最开始加上
# -*- coding:utf-8 -*-
方法3、修改pycharm配置
FILE-》setting-》Editor-》File Encodings，Global Encoding, Project Encoding, Default encoding ...都修改为UTF-8，重启pycharm即可。
方法4，有时候可能是,PyCharm 默认打开时，python console中如果用到windows下cmd里的命令时，会输出乱码，
原因：
cmd默认的编码是gbk（代码页：936），而python console 里面的编码是utf-8（代码页：65001），由于编码不一致，所以输出时会出现乱码
解决办法 修改cmd控制台编码：
如下：
1、File-Setting-Search-console-python console
2、添加以下代码 !chcp 65001
3、重启python console即可
!chcp 936 切换到gbk编码
!chcp 65001 切换到utf-8编码
Active code page: 65001
!chcp  查询当前编码
Active code page: 65001

# 问题 pycharm、 Intellij IDEA等无法用Ctrl+Shift+F, 进行全局搜索；
windows系统，解决方法：
1、排除微软拼音热键占用：点击左下角微软开始图标 -> 设置 -> 时间和语言 -> 语言 -> 首选语言 -> 左键点击 “中文(简体,中国)” -> 选项 -> 左键点击 "微软拼音" -> 选项 -> 按键 -> 热键 -> 关闭 Ctrl + Shift + F 简体/繁体中文输入切换；
2、排除搜狗输入法热键占用：找到搜狗输入法悬浮图标，右键 -> 更多设置 -> 按键 -> 系统功能快捷键 -> 点击“系统功能快捷键设置” -> 取消勾选 简繁切换 Ctrl + Shift + F
3、确认 Pycharm -> File -> Settings -> Keymap -> Main Menu -> Edit -> Find -> Find in Files的快捷键设置是不是 Ctrl + Shift + F


