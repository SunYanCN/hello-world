
if 
控制条件分支。 与大多数系统不同，ClickHouse始终评估两个表达式 then 和 else。

语法

SELECT if(cond, then, else)
如果条件 cond 的计算结果为非零值，则返回表达式 then 的结果，并且跳过表达式 else 的结果（如果存在）。 如果 cond 为零或 NULL，则将跳过 then 表达式的结果，并返回 else 表达式的结果（如果存在）。

参数

cond – 条件结果可以为零或不为零。 类型是 UInt8，Nullable(UInt8) 或 NULL。
then - 如果满足条件则返回的表达式。
else - 如果不满足条件则返回的表达式。
返回值

该函数执行 then 和 else 表达式并返回其结果，这取决于条件 cond 最终是否为零。

示例

查询:
curl 12.45.23.12:8123 -d "SELECT if(0, 2+2, 2+6)"

# 三元运算符
与 if 函数相同。
语法: cond ? then : else
如果cond ！= 0则返回then，如果cond = 0则返回else。
cond必须是UInt8类型，then和else必须存在最低的共同类型。
then和else可以是NULL

# 多条件比较：
curl 12.45.23.12:8123 -d "SELECT multiIf(7>8, '7大于8', 7<8, '7小于8', '不知道谁大') AS result"

# CASE条件表达式¶
CASE [x]
    WHEN a THEN b
    [WHEN ... THEN ...]
    [ELSE c]
END

示例：
curl 12.45.23.12:8123 -d "with [1, 2] as ab select case when ab[1]> ab[2] then '大' when ab[1]<ab[2] then   '小' else '不知' end "


# 多条件语句：
multiIf(cond_1, then_1, cond_2, then_2...else)
-- 允许您在查询中更紧凑地编写CASE运算符。类似于java中的switch语法（可以接受2n+1个参数）
SELECT multiIf(1,'one',2,'two',3,'three','not this index');-- 关联case条件表达式

# 获取列表中第一个不为空的值
select coalesce(null, 0,2,3);
coalesce(NULL, 0, 2, 3)|
-----------------------|
                      0|

# 自定义函数，获取列表中第一个符合要求的值，但这里列表中不能出现null，否则会报错：DB::Exception: Unexpected type of filter column. (ILLEGAL_COLUMN) 
SELECT arrayFirst(x -> isNotNull(x) and length(toString(x)) > 0, [ '', '', '3' ]);
若改成下面这样的，则不会报错：
SELECT arrayFirst(x -> case when isNotNull(x) and length(toString(x)) > 0 then true else false end, [ null , '', '3' ]);

# arrayExists([func,] arr1, ...)
如果 arr 中至少有一个元素 func 返回 0 以外的值，则返回 1。否则，它返回 0。

# arrayAll([func,] arr1, ...)
如果 func 为 arr 中的所有元素返回 0 以外的值，则返回 1。否则，它返回 0。

# arrayLast(func, arr1, ...)
返回 arr1 数组中的最后一个元素，其中 func 返回的值不是 0。

# arrayFirstIndex(func, arr1, ...)
返回 arr1 数组中第一个元素的索引，其中 func 返回的值不是 0。

# arrayLastIndex(func, arr1, ...)
返回 arr1 数组中最后一个元素的索引，其中 func 返回的值不是 0。

# arrayMin
返回源数组中的最小元素。
如果指定了 func 函数，则返回此函数转换的元素的最小值。

